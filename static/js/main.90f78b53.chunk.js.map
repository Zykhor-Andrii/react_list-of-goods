{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","reverse","sort","a","b","ALPHABET","localeCompare","LENGTH","length","App","state","NONE","sortAlphabetically","setState","sortLenght","sortRevers","sortReset","this","className","onClick","type","classNames","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GA2BzB,OAzBIE,GACFC,EAAaC,UAGfD,EAAaE,MAAK,SAACC,EAAWC,GAC5B,GAAIN,IAAaJ,EAASW,UAAYN,EACpC,OAAOK,EAAEE,cAAcH,GAGzB,GAAIL,IAAaJ,EAASa,QAAUR,EAClC,OAAOK,EAAEI,OAASL,EAAEK,OAGtB,OAAQV,GACN,KAAKJ,EAASW,SACZ,OAAOF,EAAEG,cAAcF,GAEzB,KAAKV,EAASa,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OAEtB,QACE,OAAO,MAINR,G,SA1CJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAkDE,IAAMe,EAAb,4MACEC,MAAyB,CACvBX,YAAY,EACZD,SAAUJ,EAASiB,MAHvB,EAMEC,mBAAqB,kBACnB,EAAKC,SAAS,CAAEf,SAAUJ,EAASW,YAPvC,EAUES,WAAa,kBACX,EAAKD,SAAS,CAAEf,SAAUJ,EAASa,UAXvC,EAcEQ,WAAa,kBACX,EAAKF,UAAS,SAAAH,GAAK,MAAK,CACtBX,YAAaW,EAAMX,gBAhBzB,EAoBEiB,UAAY,kBACV,EAAKH,SAAS,CAAEf,SAAUJ,EAASiB,KAAMZ,YAAY,KArBzD,4CAwBE,WACE,MAAiCkB,KAAKP,MAA9BX,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,SAEpB,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UAEE,wBACEC,QAASF,KAAKL,mBACdQ,KAAK,SACLF,UAAWG,IACT,iBACA,CAAE,WAAYvB,IAAaJ,EAASW,WALxC,iCAWA,wBACEc,QAASF,KAAKH,WACdM,KAAK,SACLF,UAAWG,IACT,oBACA,CAAE,WAAYvB,IAAaJ,EAASa,SALxC,4BAWA,wBACEY,QAASF,KAAKF,WACdK,KAAK,SACLF,UAAWG,IACT,oBACA,CAAE,YAAatB,IALnB,sBAYGA,GAAcD,IAAaJ,EAASiB,OACnC,wBACEQ,QAASF,KAAKD,UACdI,KAAK,SACLF,UAAU,4BAHZ,sBAYN,6BACE,6BACGtB,EAAkBD,EAAiBsB,KAAKP,OAAOY,KAAI,SAACC,GAAD,OAClD,oBACE,UAAQ,OADV,SAIGA,GAFIA,iBAnFrB,GAAyBC,aCjEzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.90f78b53.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  visibleGoods.sort((a: string, b: string) => {\n    if (sortType === SortType.ALPHABET && isReversed) {\n      return b.localeCompare(a);\n    }\n\n    if (sortType === SortType.LENGTH && isReversed) {\n      return b.length - a.length;\n    }\n\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n\n      case SortType.LENGTH:\n        return a.length - b.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortAlphabetically = () => (\n    this.setState({ sortType: SortType.ALPHABET })\n  );\n\n  sortLenght = () => (\n    this.setState({ sortType: SortType.LENGTH })\n  );\n\n  sortRevers = () => (\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }))\n  );\n\n  sortReset = () => (\n    this.setState({ sortType: SortType.NONE, isReversed: false })\n  );\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n\n          <button\n            onClick={this.sortAlphabetically}\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            onClick={this.sortLenght}\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n          >\n            Sort by length\n          </button>\n\n          <button\n            onClick={this.sortRevers}\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n          >\n            Reverse\n          </button>\n\n          {\n            (isReversed || sortType !== SortType.NONE) && (\n              <button\n                onClick={this.sortReset}\n                type=\"button\"\n                className=\"button is-danger is-light\"\n              >\n                Reset\n              </button>\n            )\n          }\n\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(goodsFromServer, this.state).map((good) => (\n              <li\n                data-cy=\"Good\"\n                key={good}\n              >\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}